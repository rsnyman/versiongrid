# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from versiongrid.models.base_model_ import Model
from versiongrid.models.component import Component
from versiongrid.models.pagination import Pagination
from versiongrid import util

from versiongrid.models.component import Component  # noqa: E501
from versiongrid.models.pagination import Pagination  # noqa: E501

class ComponentList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pagination=None, components=None):  # noqa: E501
        """ComponentList - a model defined in OpenAPI

        :param pagination: The pagination of this ComponentList.  # noqa: E501
        :type pagination: Pagination
        :param components: The components of this ComponentList.  # noqa: E501
        :type components: List[Component]
        """
        self.openapi_types = {
            'pagination': Pagination,
            'components': List[Component]
        }

        self.attribute_map = {
            'pagination': 'pagination',
            'components': 'components'
        }

        self._pagination = pagination
        self._components = components

    @classmethod
    def from_dict(cls, dikt) -> 'ComponentList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ComponentList of this ComponentList.  # noqa: E501
        :rtype: ComponentList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pagination(self):
        """Gets the pagination of this ComponentList.


        :return: The pagination of this ComponentList.
        :rtype: Pagination
        """
        return self._pagination

    @pagination.setter
    def pagination(self, pagination):
        """Sets the pagination of this ComponentList.


        :param pagination: The pagination of this ComponentList.
        :type pagination: Pagination
        """

        self._pagination = pagination

    @property
    def components(self):
        """Gets the components of this ComponentList.


        :return: The components of this ComponentList.
        :rtype: List[Component]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this ComponentList.


        :param components: The components of this ComponentList.
        :type components: List[Component]
        """

        self._components = components
