# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from versiongrid.models.base_model_ import Model
from versiongrid.models.dependency_grid import DependencyGrid
from versiongrid import util

from versiongrid.models.dependency_grid import DependencyGrid  # noqa: E501

class DependencyCheck(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_valid=None, dependency_grid=None):  # noqa: E501
        """DependencyCheck - a model defined in OpenAPI

        :param is_valid: The is_valid of this DependencyCheck.  # noqa: E501
        :type is_valid: bool
        :param dependency_grid: The dependency_grid of this DependencyCheck.  # noqa: E501
        :type dependency_grid: DependencyGrid
        """
        self.openapi_types = {
            'is_valid': bool,
            'dependency_grid': DependencyGrid
        }

        self.attribute_map = {
            'is_valid': 'is_valid',
            'dependency_grid': 'dependency_grid'
        }

        self._is_valid = is_valid
        self._dependency_grid = dependency_grid

    @classmethod
    def from_dict(cls, dikt) -> 'DependencyCheck':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DependencyCheck of this DependencyCheck.  # noqa: E501
        :rtype: DependencyCheck
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_valid(self):
        """Gets the is_valid of this DependencyCheck.


        :return: The is_valid of this DependencyCheck.
        :rtype: bool
        """
        return self._is_valid

    @is_valid.setter
    def is_valid(self, is_valid):
        """Sets the is_valid of this DependencyCheck.


        :param is_valid: The is_valid of this DependencyCheck.
        :type is_valid: bool
        """

        self._is_valid = is_valid

    @property
    def dependency_grid(self):
        """Gets the dependency_grid of this DependencyCheck.


        :return: The dependency_grid of this DependencyCheck.
        :rtype: DependencyGrid
        """
        return self._dependency_grid

    @dependency_grid.setter
    def dependency_grid(self, dependency_grid):
        """Sets the dependency_grid of this DependencyCheck.


        :param dependency_grid: The dependency_grid of this DependencyCheck.
        :type dependency_grid: DependencyGrid
        """

        self._dependency_grid = dependency_grid
