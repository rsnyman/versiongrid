# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from versiongrid.models.base_model_ import Model
from versiongrid import util


class DependencyGridDependencies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component=None, version=None):  # noqa: E501
        """DependencyGridDependencies - a model defined in OpenAPI

        :param component: The component of this DependencyGridDependencies.  # noqa: E501
        :type component: str
        :param version: The version of this DependencyGridDependencies.  # noqa: E501
        :type version: str
        """
        self.openapi_types = {
            'component': str,
            'version': str
        }

        self.attribute_map = {
            'component': 'component',
            'version': 'version'
        }

        self._component = component
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> 'DependencyGridDependencies':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DependencyGrid_dependencies of this DependencyGridDependencies.  # noqa: E501
        :rtype: DependencyGridDependencies
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component(self):
        """Gets the component of this DependencyGridDependencies.


        :return: The component of this DependencyGridDependencies.
        :rtype: str
        """
        return self._component

    @component.setter
    def component(self, component):
        """Sets the component of this DependencyGridDependencies.


        :param component: The component of this DependencyGridDependencies.
        :type component: str
        """

        self._component = component

    @property
    def version(self):
        """Gets the version of this DependencyGridDependencies.


        :return: The version of this DependencyGridDependencies.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DependencyGridDependencies.


        :param version: The version of this DependencyGridDependencies.
        :type version: str
        """

        self._version = version
