# coding: utf-8
from __future__ import absolute_import

from versiongrid import util
from versiongrid.models.base_model_ import Model


class GridDependencies(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, component=None, version=None):  # noqa: E501
        """GridDependencies - a model defined in OpenAPI

        :param component: The component of this GridDependencies.  # noqa: E501
        :type component: str
        :param version: The version of this GridDependencies.  # noqa: E501
        :type version: str
        """
        self.openapi_types = {"component": str, "version": str}

        self.attribute_map = {"component": "component", "version": "version"}

        self._component = component
        self._version = version

    @classmethod
    def from_dict(cls, dikt) -> "GridDependencies":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Grid_dependencies of this GridDependencies.  # noqa: E501
        :rtype: GridDependencies
        """
        return util.deserialize_model(dikt, cls)

    @property
    def component(self):
        """Gets the component of this GridDependencies.


        :return: The component of this GridDependencies.
        :rtype: str
        """
        return self._component

    @component.setter
    def component(self, component):
        """Sets the component of this GridDependencies.


        :param component: The component of this GridDependencies.
        :type component: str
        """

        self._component = component

    @property
    def version(self):
        """Gets the version of this GridDependencies.


        :return: The version of this GridDependencies.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GridDependencies.


        :param version: The version of this GridDependencies.
        :type version: str
        """

        self._version = version
